package {{ .Package }}

import (
{{ range $key, $import := .Imports }}{{ $import }}
{{ end }}
)
{{ $index := 0 }} {{ $model := .Model }}
// RequestSearch{{ .Model }} Request form for search {{ .Model }}
//
// swagger:parameters Search{{ .Model }}
type RequestSearch{{ .Model }} struct {
    // In: body
    Body struct {
        client.{{ .Model }}SearchForm
    }
}

// ResponseSearch{{ .Model }} Response {{ icameled .Model }} list
//
// swagger:response ResponseSearch{{ .Model }}
type ResponseSearch{{ .Model }} struct {
    // In: body
    Body struct {
        // System message
        Message string `json:"message,omitempty"`
        // {{ .Model }} entity list
        Data []client.{{ .Model }} `json:"data"`
    }
}

// swagger:route POST /{{ .Package }}/{{ underscore .Model }}/list Search Search{{ .Model }}
//
// {{ .Model }}. Search {{ icameled .Model }} entities
//
// Make request for entity search
//
//     Consumes:
//     - application/json
//
//     Produces:
//     - application/json
//
//     Schemes: https
//
//     Responses:
//       200: ResponseSearch{{ .Model }}
//       400: ResponseError
//       500: ResponseError
func Search{{ .Model }}(w http.ResponseWriter, r *http.Request) {
    request := client.{{ .Model }}SearchForm{}
    e := gorest.ParseJsonBody(r.Body, &request)
    if e != nil {
        gorest.Send(w, gorest.NewErrorJsonResponse(e))
        return
    }
    // Search {{ searchField .Model }}
    items, meta, e := core.{{ .Model }}Search(base.App.GetDB(), request)
    if e != nil {
        gorest.Send(w, gorest.NewErrorJsonResponse(e))
        return
    }
    gorest.Send(w, gorest.NewOkJsonResponse("List of {{ searchField .Model }}", items, meta))
}